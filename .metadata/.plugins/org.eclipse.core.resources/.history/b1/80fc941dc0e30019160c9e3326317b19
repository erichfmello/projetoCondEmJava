package Controler;

import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JOptionPane;

import Model.*;

public class ControlerAllGuest extends ControlerConection {
	private String documentGuest;
    private String name;
	private Date date;
	
	private int totalReservation;
	
	// Variaveis dos model
	ModelGuest[] modelGuests;
	ModelRentalGuest[] modelRentalGuests;
	
	// Contrutores
	public ControlerAllGuest() {
	}

	public ControlerAllGuest(String documentGuest, String name, Date date) {
		super();
		this.documentGuest = documentGuest;
		this.name = name;
		this.date = date;
	}

	// getter and setter
	public String getDocumentGuest() {
		return documentGuest;
	}

	public void setDocumentGuest(String documentGuest) {
		this.documentGuest = documentGuest;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Date getDate() {
		return date;
	}

	public void setDate(Date date) {
		this.date = date;
	}
	
	public int getTotalReservation() {
		return totalReservation;
	}

	public void setTotalReservation(int totalReservation) {
		this.totalReservation = totalReservation;
	}

	public ModelGuest[] getModelGuests() {
		return modelGuests;
	}

	public void setModelGuests(ModelGuest[] modelGuests) {
		this.modelGuests = modelGuests;
	}

	public ModelRentalGuest[] getModelRentalGuests() {
		return modelRentalGuests;
	}

	public void setModelRentalGuests(ModelRentalGuest[] modelRentalGuests) {
		this.modelRentalGuests = modelRentalGuests;
	}

	// Selects
	public void selectAllGuests(Date reservationDate) {
		DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
		
		int i = 0;
		
		try {
			conecting();
			
			conn = conecting();
			comandSql = conn.createStatement();
			rs = comandSql.executeQuery("select count(*) from convidado c inner join alugadoconvidado ac on c.documentoConvidado = ac.documentoConvidado where dataAluguel = '" + df.format(reservationDate) + "'");
			if(rs.next()) {
				totalReservation = rs.getInt("count(*)");
			}

			modelGuests = new ModelGuest[totalReservation];
			modelRentalGuests = new ModelRentalGuest[totalReservation];
			
			rs = comandSql.executeQuery("select * from convidado c inner join alugadoconvidado ac on c.documentoConvidado = ac.documentoConvidado where dataAluguel = '" + df.format(reservationDate) + "'");
			while(rs.next()) {
				documentGuest = rs.getString("documentoConvidado");
			    name = rs.getString("nome");
				date = reservationDate;
				
				modelGuests[i] = new ModelGuest(documentGuest, name);
				modelRentalGuests[i] = new ModelRentalGuest(date, documentGuest);
				i++;
			}
			
			closeConection(conn);
		} catch (SQLException e) {
			System.out.println("Erro no select: " + e);
			
		}
	}
	
	// Inserts
	public void insertNewGuest() {
		DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
		
		try {
			conecting();
			
			conn = conecting();
			comandSql = conn.createStatement();
			comandSql.executeUpdate("insert into convidado values('" + documentGuest + "', '" + name + "')");
			comandSql.executeUpdate("insert into alugadoconvidado values('" + df.format(date) + "', '" + documentGuest + "')");
			
			closeConection(conn);
			
		} catch (SQLException e) {
			System.out.println("Erro no insert: " + e);
			
		}
	}
	
	// Updates
	
	// Delets
}