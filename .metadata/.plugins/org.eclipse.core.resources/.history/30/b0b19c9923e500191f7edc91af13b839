package Controler;

import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.SimpleFormatter;
import java.util.zip.DataFormatException;

import Model.ModelOccurrence;

public class ControlerOccurence extends ControlerConection {
	private Date date;
	private int appartament;
	private String description;
	private String cnpj;
	
	// Variaveis comuns
	private int totalOccurence;
	private boolean test = false;
	
	// Variaveis do model
	ModelOccurrence[] modelOccurrence;
	
	// Construtores
	public ControlerOccurence() {
	}

	public ControlerOccurence(Date date, int appartament, String description, String cnpj) {
		super();
		this.date = date;
		this.appartament = appartament;
		this.description = description;
		this.cnpj = cnpj;
	}

	// getter and setter
	public Date getDate() {
		return date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	public int getAppartament() {
		return appartament;
	}

	public void setAppartament(int appartament) {
		this.appartament = appartament;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getCnpj() {
		return cnpj;
	}

	public void setCnpj(String cnpj) {
		this.cnpj = cnpj;
	}

	public int getTotalOccurence() {
		return totalOccurence;
	}

	public void setTotalOccurence(int totalOccurence) {
		this.totalOccurence = totalOccurence;
	}

	public ModelOccurrence[] getModelOccurrence() {
		return modelOccurrence;
	}

	public void setModelOccurrence(ModelOccurrence[] modelOccurrence) {
		this.modelOccurrence = modelOccurrence;
	}

	// select
	public void selectAllOccurence(String cnpj) {
		int i = 0;
		
		try {
			conecting();
			
			conn = conecting();
			comandSql = conn.createStatement();
			rs = comandSql.executeQuery("select count(*) from livroNegro where cnpj = '" + cnpj + "' order by dataOcorrencia, apartamento");
			if(rs.next()) {
				totalOccurence = rs.getInt("count(*)");
			}
			
			modelOccurrence = new ModelOccurrence[totalOccurence];
			
			rs = comandSql.executeQuery("select * from livroNegro where cnpj = '" + cnpj + "' order by dataOcorrencia, apartamento");
			while(rs.next()) {
				date = rs.getDate("dataOcorrencia");
				appartament = rs.getInt("apartamento");
				description = rs.getString("descricao");
				this.cnpj = rs.getString("cnpj");
				
				modelOccurrence[i] = new ModelOccurrence(date, appartament, description, cnpj);
				
				i++;
			}
			
			closeConection(conn);
			
		} catch (SQLException e) {
			System.out.println("Erro no select: " + e);
		}
	}
	
	public void selectOccurence(String cnpj, Date occurrenceDate, int appartament) {
		DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
		
		try {
			conecting();
			
			conn = conecting();
			comandSql = conn.createStatement();
			rs = comandSql.executeQuery("select * from livroNegro where cnpj = '" + cnpj + "' and dataOcorrencia = '" + df.format(occurrenceDate) + "' and apartamento = " + appartament);
			
			if(rs.next()) {
				date = rs.getDate("dataOcorrencia");
				appartament = rs.getInt("apartamento");
				description = rs.getString("descricao");
				cnpj = rs.getString("cnpj");
			}
			
			closeConection(conn);
			
		} catch (SQLException e) {
			System.out.println("Erro no select: " + e);
		}
	}
	
	// insert
	public void insertNewOccurrence(String cnpj) {
		DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
		
		try {
			conecting();
			
			conn = conecting();
			comandSql = conn.createStatement();
			comandSql.executeUpdate("insert into livroNegro values('" + df.format(date) + "', " + appartament + ", '" + description + "', '" + cnpj + "')");
			
			closeConection(conn);
			
		} catch (SQLException e) {
			System.out.println("Erro no insert: " + e);
		}
	}
	
	// Update
	
	// Delete
	public void deleteOccurence(String cnpj, Date occurenceDate) {
		DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
		
		try {
			conecting();
			
			conn = conecting();
			comandSql = conn.createStatement();
			comandSql.executeUpdate("delete from livroNegro where cnpj = '" + cnpj + "' and dataOcorrencia = '" + df.format(occurenceDate) + "'");
			
			closeConection(conn);
			
		} catch (SQLException e) {
			System.out.println("Erro no insert: " + e);
		}
	}
}
