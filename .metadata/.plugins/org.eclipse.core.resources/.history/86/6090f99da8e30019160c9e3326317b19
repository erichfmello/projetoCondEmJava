package Controler;

import java.util.Date;

import javax.swing.JOptionPane;

import Model.*;
import java.sql.*;
import java.text.DateFormat;
import java.text.FieldPosition;
import java.text.ParsePosition;
import java.text.SimpleDateFormat;

public class ControlerRentalCommunAreas extends ControlerConection {
	private Date reservationDate;
	private String cnpj;
	private String description;
	private int reservationAppartament;
	
	private int totalReservationDate;
	
	// Variavais do Model
	private ModelRentalCommunAreas[] modelRentalCommunAreas;
	
	// Construtores
	public ControlerRentalCommunAreas() {
	}

	public ControlerRentalCommunAreas(Date reservationDate, String cnpj, String description, int reservationAppartament) {
		super();
		this.reservationDate = reservationDate;
		this.cnpj = cnpj;
		this.description = description;
		this.reservationAppartament = reservationAppartament;
	}

	// getter and setter
	public Date getReservationDate() {
		return reservationDate;
	}

	public void setReservationDate(Date reservationDate) {
		this.reservationDate = reservationDate;
	}

	public String getCnpj() {
		return cnpj;
	}

	public void setCnpj(String cnpj) {
		this.cnpj = cnpj;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public int getReservationAppartament() {
		return reservationAppartament;
	}

	public void setReservationAppartament(int reservationAppartament) {
		this.reservationAppartament = reservationAppartament;
	}
		
	public int getTotalReservationDate() {
		return totalReservationDate;
	}

	public void setTotalReservationDate(int totalReservationDate) {
		this.totalReservationDate = totalReservationDate;
	}

	public ModelRentalCommunAreas[] getModelRentalCommunAreas() {
		return modelRentalCommunAreas;
	}
	
	public void setModelRentalCommunAreas(ModelRentalCommunAreas[] modelRentalCommunAreas) {
		this.modelRentalCommunAreas = modelRentalCommunAreas;
	}
		
	// Selects
	public void selectAllReservationDates(String cnpj) {
		int i = 0;		
		
		try {
			conecting();
			
			conn = conecting();
			comandSql = conn.createStatement();
			rs = comandSql.executeQuery("select count(*) from alugado a inner join ModeloAluguelalugado ma on a.dataAluguel = ma.dataAluguel where a.cnpj = '" + cnpj + "'");
			
			if(rs.next()) {
				totalReservationDate = rs.getInt("count(*)");
			}
			modelRentalCommunAreas = new ModelRentalCommunAreas[totalReservationDate];
			
			rs = comandSql.executeQuery("select * from alugado a inner join ModeloAluguelalugado ma on a.dataAluguel = ma.dataAluguel where a.cnpj = '" + cnpj + "'");
			
			while(rs.next()) {
				reservationDate = rs.getDate("dataAluguel");
				this.cnpj = rs.getString("cnpj");
				reservationAppartament = rs.getInt("apartamento");
				description = rs.getString("descricao");
				
				modelRentalCommunAreas[i] = new ModelRentalCommunAreas(reservationDate, cnpj, description, reservationAppartament);
				i++;
			}
			
			closeConection(conn);
			
		} catch (SQLException e) {
			System.out.println("Erro no select: " + e);
			
		}
	}

	// Inserts
	public void insertReservation(String cnpj) {
		DateFormat df = new SimpleDateFormat("yyyy/MM/dd");
		
		try {
			conecting();
			
			conn = conecting();
			comandSql = conn.createStatement();
			comandSql.executeUpdate("insert into alugado values('" + df.format(reservationDate) + "', '" + cnpj + "', " + reservationAppartament + ")");
			
			closeConection(conn);
			
		} catch (SQLException e) {
			System.out.println("Erro no insert: " + e);
		}
	}

	public void insertReservationAtModel(String cnpj) {
		DateFormat df = new SimpleDateFormat("yyyy/MM/dd");
		
		try {
			conecting();
			
			conn = conecting();
			comandSql = conn.createStatement();
			comandSql.executeUpdate("insert into ModeloAluguelalugado values ('" + cnpj + "', '" + description + "', '" + df.format(reservationDate) + "')");
			
			closeConection(conn);
			
		} catch (SQLException e) {
			System.out.println("Erro no insert: " + e);
		}
	}
	
	// Updates
	
	// Deletes
	public void deleteReservationDate(Date reservationDate, String cnpj) {
		try {
			conecting();
			
			conn = conecting();
			comandSql = conn.createStatement();
			comandSql.executeUpdate("delete from alugado where dataAluguel = '" + reservationDate + "' and cnpj = '" + cnpj + "'");
			
			closeConection(conn);
			
		} catch (SQLException e) {
			System.out.println("Erro no delete: " + e);
		}
	}
}
